% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deriveSampleScaling.R
\name{deriveSampleScaling}
\alias{deriveSampleScaling}
\title{Function deriveSampleScaling
create init_scaling and dep_scaling (γ,γ').
Misspecification will cause our 'neutral' model to
actually be depleted, reducing all essentiality scores.
E(λ) = med(y/n) ~ sum(y)
model 1a: (default) assume >50% φ_G = 1,
and set γ'=med(y/(n_sg)); E(n_sg) = c_s m_g,
the masterlib freq m_g * total infected cells c_s.
model 1b: (no masterlib) set λ'=med(y_g/n);
E(x_s) = median_g(x_sg/mean_s(x_g/sum(x))) * c_s
mean_s(x_g/sum(x)) given in masterlibrary.}
\usage{
deriveSampleScaling(
  user_DataObj,
  master_freq_dt,
  use_master_library,
  use_neg_ctrl,
  neg_ctrls
)
}
\arguments{
\item{user_DataObj}{all data; a DataObj.}

\item{master_freq_dt}{normalized masterlibrary frequencies (log)}

\item{use_master_library}{Boolean}

\item{use_net_ctrl}{Boolean}
}
\description{
Function deriveSampleScaling
create init_scaling and dep_scaling (γ,γ').
Misspecification will cause our 'neutral' model to
actually be depleted, reducing all essentiality scores.
E(λ) = med(y/n) ~ sum(y)
model 1a: (default) assume >50% φ_G = 1,
and set γ'=med(y/(n_sg)); E(n_sg) = c_s m_g,
the masterlib freq m_g * total infected cells c_s.
model 1b: (no masterlib) set λ'=med(y_g/n);
E(x_s) = median_g(x_sg/mean_s(x_g/sum(x))) * c_s
mean_s(x_g/sum(x)) given in masterlibrary.
}
